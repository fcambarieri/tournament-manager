create schema tournament;

GRANT USAGE ON SCHEMA tournament TO tuser ;

CREATE SEQUENCE tournament.users_seq START 100;

CREATE SEQUENCE tournament.accounts_seq START 100;

GRANT ALL ON ALL TABLES
IN SCHEMA tournament TO tuser;

GRANT USAGE ON SEQUENCE tournament.users_seq TO tuser;
GRANT USAGE ON SEQUENCE tournament.accounts_seq TO tuser;

create table tournament.users (
    id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    email varchar(60) unique not null,
    user_name varchar(60) unique not null,
    password varchar(60) not null,
    date_created timestamp DEFAULT current_timestamp,
    status varchar(60)
);

create table tournament.roles (
    id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name varchar(60) unique not null
);

create table tournament.user_roles(
    user_id integer not null,
    role_id integer not null,
    constraint relation primary key (user_id, role_id)
);

create table tournament.tournament_type (
    name varchar(60)  primary key
);


create table tournament.tournament (
    id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    owner_id int not null,
    type varchar(60) not null,
    name varchar(60) not null,
    description varchar(300),
    date_started date not null,
    date_end date not null,
    status varchar(60) not null,
    date_created timestamp DEFAULT current_timestamp,
    date_updated timestamp,
    constraint fk_tournament_owner_id
         foreign key (owner_id)
            REFERENCES tournament.users (id),
    constraint fk_tournament_type
             foreign key (type)
                REFERENCES tournament.tournament_type (name)
);

create INDEX tournament_owner_id_idx on tournament.tournament(owner_id);

create table tournament.countries (
    code varchar(3) unique primary key,
    name varchar(60) unique not null
);

create table tournament.accounts (
      id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
      association_name varchar(60) unique not null,
      phone_number varchar(20) unique not null,
      street_name varchar(60) ,
      street_number varchar(10),
      city_name varchar(60),
      state_name varchar(60),
      country_code varchar(3),
      owner_id integer not null,
      constraint fk_account_owner_id
        FOREIGN KEY (owner_id)
                  REFERENCES tournament.users(id),
      constraint fk_account_country_code
              FOREIGN KEY (country_code)
                        REFERENCES tournament.countries(code)
);
create INDEX accounts_owner_id_idx on tournament.accounts(owner_id);


create table tournament.participant_teams (
    id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    tournament_id integer not null,
    name varchar(60) not null,
    email varchar(60) not null,
    user_subscriber_id integer not null,
    date_created timestamp DEFAULT current_timestamp,
    constraint fk_pt_tournament_id
        FOREIGN KEY (tournament_id)
                REFERENCES tournament.tournament(id),
    constraint fk_pt_subscriber_id
            FOREIGN KEY (user_subscriber_id)
                    REFERENCES tournament.users(id)
);
create INDEX participant_teams_tournament_id_idx on tournament.participant_teams(tournament_id);
create INDEX participant_teams_user_subscriber_id_idx on tournament.participant_teams(user_subscriber_id);

create table tournament.age_categories (
    id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    tournament_id integer not null,
    name varchar(60) not null,
    min_age int not null,
    max_age int not null,

    constraint fk_age_categories_tournament_id
        FOREIGN KEY (tournament_id)
                REFERENCES tournament.tournament(id)
);
create INDEX age_categories_tournament_id_idx on tournament.age_categories(tournament_id);


create table tournament.combat_categories (
    id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    tournament_id integer not null,
    name varchar(60),
    min_weight int not null,
    max_weight int not null,
    sex varchar(20) not null,
    type varchar(20) not null,
    num_participant integer not null default 1,
    age_category_id integer not null,
    constraint fk_combat_categories_tournament_id
        FOREIGN KEY (tournament_id)
                REFERENCES tournament.tournament(id)
);
create INDEX combat_categories_tournament_id_idx on tournament.combat_categories(tournament_id);

create table tournament.belt_categories (
    id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    tournament_id integer not null,
    name varchar(60) not null,
    constraint fk_belt_categories_tournament_id
        FOREIGN KEY (tournament_id)
                REFERENCES tournament.tournament(id)
);

create INDEX belt_categories_tournament_id_idx on tournament.belt_categories(tournament_id);

create table tournament.form_categories (
    id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    tournament_id integer not null,
    name varchar(60) not null,
    sex varchar(20) not null,
    min_age integer not null,
    max_age integer not null,
    type varchar(20) not null,
    num_participant integer not null default 1,
    constraint fk_form_categories_tournament_id
        FOREIGN KEY (tournament_id)
                REFERENCES tournament.tournament(id)
);

create INDEX form_categories_tournament_id_idx on tournament.form_categories(tournament_id);

create table tournament.participants (
    id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    tournament_id integer not null,
    name varchar(60) not null,
    last_name varchar(60) not null,
    doc_type varchar(60),
    doc_number varchar(60),
    nationality varchar(60),
    email varchar(60) not null,
    birth_date date not null,
    height integer,
    weight integer,
    sex varchar(20) not null,
    status varchar(20) not null,
    participant_team_id integer not null,
    belt_category_id integer not null,
    date_created timestamp DEFAULT current_timestamp,
    date_updated timestamp,

    constraint fk_participants_participant_team_id
        FOREIGN KEY (participant_team_id)
                REFERENCES tournament.participant_teams(id),

    constraint fk_participants_tournament_id
    FOREIGN KEY (tournament_id)
            REFERENCES tournament.tournament(id)

);

create INDEX participants_tournament_id_idx on tournament.participants(tournament_id);
create INDEX participants_participant_team_id_idx on tournament.participants(participant_team_id);

create table tournament.participant_modalities (
    id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    participant_id integer not null,
    type varchar(20) not null,
    category_id integer,
    constraint fk_participant_modalities_participant_id
    FOREIGN KEY (participant_id)
            REFERENCES tournament.participants(id)
);

create INDEX participant_modalities_participant_id_idx on tournament.participant_modalities(participant_id);
create INDEX participant_modalities_type_category_id_idx on tournament.participant_modalities(type, category_id);
